//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.10.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from P:/source/repos/antlr-mega-tutorial/antlr-csharp/antlr-csharp-tmt/Content\TruMarkTestScript.g4 by ANTLR 4.10.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="TruMarkTestScriptParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.10.1")]
[System.CLSCompliant(false)]
public interface ITruMarkTestScriptListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] TruMarkTestScriptParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] TruMarkTestScriptParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] TruMarkTestScriptParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] TruMarkTestScriptParser.LineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] TruMarkTestScriptParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] TruMarkTestScriptParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlock([NotNull] TruMarkTestScriptParser.IfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlock([NotNull] TruMarkTestScriptParser.IfBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfBlock([NotNull] TruMarkTestScriptParser.ElseIfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfBlock([NotNull] TruMarkTestScriptParser.ElseIfBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] TruMarkTestScriptParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] TruMarkTestScriptParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.whileBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileBlock([NotNull] TruMarkTestScriptParser.WhileBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.whileBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileBlock([NotNull] TruMarkTestScriptParser.WhileBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.assignement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignement([NotNull] TruMarkTestScriptParser.AssignementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.assignement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignement([NotNull] TruMarkTestScriptParser.AssignementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] TruMarkTestScriptParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] TruMarkTestScriptParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedExpression([NotNull] TruMarkTestScriptParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesizedExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedExpression([NotNull] TruMarkTestScriptParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantExpression([NotNull] TruMarkTestScriptParser.ConstantExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantExpression([NotNull] TruMarkTestScriptParser.ConstantExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] TruMarkTestScriptParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>additiveExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] TruMarkTestScriptParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierExpression([NotNull] TruMarkTestScriptParser.IdentifierExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>identifierExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierExpression([NotNull] TruMarkTestScriptParser.IdentifierExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallExpression([NotNull] TruMarkTestScriptParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>functionCallExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallExpression([NotNull] TruMarkTestScriptParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotExpression([NotNull] TruMarkTestScriptParser.NotExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotExpression([NotNull] TruMarkTestScriptParser.NotExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonExpression([NotNull] TruMarkTestScriptParser.ComparisonExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comparisonExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonExpression([NotNull] TruMarkTestScriptParser.ComparisonExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicativeExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] TruMarkTestScriptParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicativeExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] TruMarkTestScriptParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExpression([NotNull] TruMarkTestScriptParser.BooleanExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpression</c>
	/// labeled alternative in <see cref="TruMarkTestScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExpression([NotNull] TruMarkTestScriptParser.BooleanExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultOp([NotNull] TruMarkTestScriptParser.MultOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultOp([NotNull] TruMarkTestScriptParser.MultOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddOp([NotNull] TruMarkTestScriptParser.AddOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddOp([NotNull] TruMarkTestScriptParser.AddOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareOp([NotNull] TruMarkTestScriptParser.CompareOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareOp([NotNull] TruMarkTestScriptParser.CompareOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolOp([NotNull] TruMarkTestScriptParser.BoolOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolOp([NotNull] TruMarkTestScriptParser.BoolOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="TruMarkTestScriptParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] TruMarkTestScriptParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="TruMarkTestScriptParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] TruMarkTestScriptParser.ConstantContext context);
}
